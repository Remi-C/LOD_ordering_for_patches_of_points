# -*- coding: utf-8 -*-
"""
Created on Fri Dec 19 15:41:26 2014

@author: remi
"""
import numpy as np ;
import networkx as nx
from matplotlib import cm as cmap
labels = ['other ground', 'road', 'sidewalk', 'building', 'punctual object', 'pedestrian', '4+ wheelers']
labels = ['unclassified', 'other ground', 'road', 'sidewalk', 'curb', 'building', 'other object', 'post', 'floor lamp', 'traffic sign', 'mailbox', 'trash can', 'grid', 'pedestrian', 'other pedestrian', 'still pedestrian', 'holding pedestrian', 'bicycle', 'scooter', 'other 4+ wheels', 'tree', 'potted plant']

cm = np.array([[ 0.,0.33333333 ,0.33333333, 0.,0.,0.,0.33333333],
[ 0.03846154 ,0.84615385,0.11538462,0.,0.,0.,0. ],
[ 0.,0.07142857 ,0.89285714, 0.,0.,0.,0.03571429],
[ 0.,0.,0.01654846,0.93144208,0.03546099,0.00236407,0.0141844 ],
[ 0.,0.,0.,0.,1.,0.,0.        ],
[ 0.,0.,0.,1.,0.,0.,0.        ],
[ 0.15384615,0.,0.,0.07692308,0.23076923,0.,0.53846154]])

cm = np.array(
[[  1.25000000e-01,9.61538462e-03,3.84615385e-02,5.76923077e-02,1.92307692e-02,1.15384615e-01,1.73076923e-01,2.88461538e-02,4.80769231e-02,0.00000000e+00,0.00000000e+00,1.92307692e-02,7.69230769e-02,0.00000000e+00,9.61538462e-03,2.88461538e-02,0.00000000e+00,0.00000000e+00,4.80769231e-02,1.92307692e-01,9.61538462e-03,0.00000000e+00],
 [  0.00000000e+00,5.89041096e-01,6.84931507e-02,2.32876712e-01,0.00000000e+00,0.00000000e+00,8.21917808e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.36986301e-02,1.36986301e-02,0.00000000e+00,0.00000000e+00],
 [  1.25195618e-02,3.05164319e-02,8.29420970e-01,8.45070423e-02,3.05164319e-02,0.00000000e+00,8.60719875e-03,2.34741784e-03,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.56494523e-03,0.00000000e+00,0.00000000e+00],
 [  9.81595092e-03,6.62576687e-02,8.58895706e-02,7.66871166e-01,1.96319018e-02,0.00000000e+00,3.31288344e-02,2.45398773e-03,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,2.45398773e-03,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,4.90797546e-03,8.58895706e-03,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,2.70270270e-02,8.10810811e-02,1.08108108e-01,5.40540541e-01,0.00000000e+00,2.70270270e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,2.70270270e-02,1.89189189e-01,0.00000000e+00,0.00000000e+00],
 [  4.93840861e-03,5.10487182e-03,8.32316058e-04,1.13749861e-02,6.10365109e-04,8.61502608e-01,1.12085229e-02,1.83109533e-03,1.60914438e-03,1.49816890e-03,0.00000000e+00,3.60670292e-03,1.27621796e-02,1.10975474e-04,2.10853401e-03,7.76828321e-04,4.43901898e-04,2.77438686e-04,3.93962934e-03,2.20286317e-02,5.21029852e-02,1.33170569e-03],
 [  3.92156863e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.96078431e-02,0.00000000e+00,8.52941176e-01,1.96078431e-02,0.00000000e+00,0.00000000e+00,9.80392157e-03,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,9.80392157e-03,0.00000000e+00,4.90196078e-02,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.09890110e-02,3.29670330e-02,9.23076923e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.29670330e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00],
 [  5.00000000e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.00000000e-01,0.00000000e+00,0.00000000e+00,5.50000000e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.00000000e-01,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,7.77777778e-01,2.22222222e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,5.00000000e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,5.00000000e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,4.54545455e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,2.72727273e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,9.09090909e-02,0.00000000e+00,0.00000000e+00,9.09090909e-02,9.09090909e-02,0.00000000e+00,0.00000000e+00],
 [  4.87804878e-02,0.00000000e+00,0.00000000e+00,9.75609756e-02,0.00000000e+00,2.43902439e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,4.39024390e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.21951220e-01,4.87804878e-02,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.33333333e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.33333333e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.33333333e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00],
 [  9.52380952e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.33333333e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.90476190e-01,0.00000000e+00,3.33333333e-01,4.76190476e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.11111111e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,2.22222222e-01,1.11111111e-01,0.00000000e+00,4.44444444e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.11111111e-01,0.00000000e+00,0.00000000e+00],
 [  2.50000000e-01,0.00000000e+00,0.00000000e+00,2.50000000e-01,0.00000000e+00,5.00000000e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.33333333e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.33333333e-01,0.00000000e+00,3.33333333e-01,0.00000000e+00,0.00000000e+00],
 [  1.31578947e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.31578947e-02,1.31578947e-02,2.63157895e-02,2.63157895e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.94736842e-02,1.31578947e-02,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,5.39473684e-01,3.15789474e-01,0.00000000e+00,0.00000000e+00],
 [  6.06060606e-02,3.24675325e-02,8.65800866e-03,6.49350649e-02,4.32900433e-03,1.51515152e-02,7.35930736e-02,3.03030303e-02,1.73160173e-02,0.00000000e+00,0.00000000e+00,1.08225108e-02,4.32900433e-03,0.00000000e+00,0.00000000e+00,4.32900433e-03,2.16450216e-03,2.16450216e-03,9.52380952e-02,5.73593074e-01,0.00000000e+00,0.00000000e+00],
 [  0.00000000e+00,4.28112736e-03,0.00000000e+00,7.84873350e-03,0.00000000e+00,6.56439529e-02,1.42704245e-03,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.56760614e-04,5.70816982e-03,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,3.56760614e-04,1.42704245e-03,9.12236889e-01,7.13521227e-04],
 [  0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,1.00000000e-01,0.00000000e+00,0.00000000e+00,1.00000000e-01,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,0.00000000e+00,8.00000000e-01]]
)
 

G = nx.from_numpy_matrix(cm) 
G = nx.relabel_nodes(G,mapping=dict(zip(G.nodes(),labels)))
   
nx.draw(G,edge_color = [ i[2]['weight'] for i in G.edges(data=True) ], edge_cmap=cm.get_cmap('ocean') 
, width=2,style ='dashed',font_size=14,font_weight=1000,pos=nx.spring_layout(G) ) 


edgewidth = [ d['weight']*100 for (u,v,d) in G.edges(data=True)] 


nx.draw_spectral(G,node_color='g',edge_color = [ i[2]['weight'] for i in G.edges(data=True) ], edge_cmap=cmap.get_cmap('jet') 
, width=edgewidth  ,font_size=30,font_weight='bold',font_family='' ) 

fig = matplotlib.pyplot.gcf() 


font_weight
print(G)
print(G.edges())

for edge in G:
    print edge..get(weight,1)

import community
reload(nx) 
partition = community best_partition(G)

#drawing
size = float(len(set(partition.values())))
pos = nx.spring_layout(G)
count = 0.
for com in set(partition.values()) :
    count = count + 1.
    list_nodes = [nodes for nodes in partition.keys()
                                if partition[nodes] == com]
    nx.draw_networkx_nodes(G, pos, list_nodes, node_size = 20,
                                node_color = str(count / size))


nx.draw_networkx_edges(G,pos, alpha=0.5)
plt.show()
    
    
    
    
    
    
    
    